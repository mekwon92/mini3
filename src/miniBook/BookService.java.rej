diff a/src/miniBook/BookService.java b/src/miniBook/BookService.java	(rejected hunks)
@@ -15,16 +20,37 @@
 	System.out.println("초기데이터 삽입 완료.");
 }
 
-public static void main(String[] args) {
-// booklist.forEach(System.out::println);
-// System.out.println());
+public class BookQuerryTest {
+	String clientID = "tqo7kxREe4GFC4lx0fAK";
+	String secret = "jcYW9V3xwB";
+
+	public void call() throws Exception {
+		String query = "폭풍의 언덕";
+		query = URLEncoder.encode(query, "utf-8");
+		String url = "https://openapi.naver.com/v1/search/book.json?query=" + query + "&display=100";
+
+		HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();
+		conn.setRequestMethod("GET");
+		conn.setRequestProperty("X-Naver-Client-Id", clientID);
+		conn.setRequestProperty("X-Naver-Client-Secret", secret);
+
+		int respCode = conn.getResponseCode(); // 200
+		System.out.println(respCode);
+		if (respCode == HttpURLConnection.HTTP_OK) {
+			try (BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()))) {
+				String tmp = null;
+				while (null != (tmp = br.readLine())) {
+					System.out.println(tmp);
+				}
+			} catch (Exception e) {
+				e.printStackTrace();
+			}
+		}
+	}
 }
 
-public void addBook() {	
-	
+public static void main(String[] args) throws Exception {
+	new BookQuerry().call();
 }
-// public void
-
-
 
 }
\ No newline at end of file
